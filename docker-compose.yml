services:
  nexus-orchestrator:
    build: ./nexus-orchestrator
    image: tssprotx/agent:nexus-orchestrator_latest
    container_name: nexus-orchestrator
    ports:
      - "3003:3000"
    environment:
      - NEXUS_DB_USER=${NEXUS_DB_USER}
      - NEXUS_DB_PASSWORD=${NEXUS_DB_PASSWORD}
      - NEXUS_DB_HOST=${NEXUS_DB_HOST}
      - NEXUS_DB_NAME=${NEXUS_DB_NAME}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    depends_on:
      nexus-db: { condition: service_healthy }
      # Note: For develop.watch, you usually don't need depends_on on other *application* services
      # as they might restart frequently during development. The DBs are crucial for initial startup.
    develop:
      watch:
        # Sync the entire nexus-orchestrator directory (excluding node_modules)
        - action: sync
          path: ./nexus-orchestrator
          target: /app
          ignore:
            - node_modules/
        # Rebuild the container if package.json or Dockerfile changes (e.g., new dependencies)
        - action: rebuild
          path: ./nexus-orchestrator/package.json
        - action: rebuild
          path: ./nexus-orchestrator/Dockerfile
    restart: on-failure

  knowledge-engine:
    build: ./knowledge-engine
    image: tssprotx/agent:knowledge-engine_latest
    container_name: knowledge-engine
    ports:
      - "4000:4000"
    environment:
      - KNOWLEDGE_DB_USER=${KNOWLEDGE_DB_USER}
      - KNOWLEDGE_DB_PASSWORD=${KNOWLEDGE_DB_PASSWORD}
      - KNOWLEDGE_DB_HOST=${KNOWLEDGE_DB_HOST}
      - KNOWLEDGE_DB_NAME=${KNOWLEDGE_DB_NAME}
      - QDRANT_HOST=${QDRANT_HOST}
    depends_on:
      knowledge-db: { condition: service_healthy }
      qdrant: { condition: service_healthy }
    develop:
      watch:
        - action: sync
          path: ./knowledge-engine
          target: /app
        - action: rebuild
          path: ./knowledge-engine/requirements.txt
        - action: rebuild
          path: ./knowledge-engine/Dockerfile
    restart: on-failure

  financial-engine:
    build: ./financial-engine
    image: tssprotx/agent:financial-engine_latest
    container_name: financial-engine
    ports:
      - "5000:5000"
    environment:
      - FINANCIAL_DB_USER=${FINANCIAL_DB_USER}
      - FINANCIAL_DB_PASSWORD=${FINANCIAL_DB_PASSWORD}
      - FINANCIAL_DB_HOST=${FINANCIAL_DB_HOST}
      - FINANCIAL_DB_NAME=${FINANCIAL_DB_NAME}
    depends_on:
      financial-db: { condition: service_healthy }
    develop:
      watch:
        - action: sync
          path: ./financial-engine
          target: /app
        - action: rebuild
          path: ./financial-engine/requirements.txt
        - action: rebuild
          path: ./financial-engine/Dockerfile
    restart: on-failure

  # --- Database and Utility Services (Unchanged from previous versions) ---
  qdrant:
    image: qdrant/qdrant:v1.7.4
    platform: linux/amd64 
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 6333"] 
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  nexus-db:
    image: postgres:15
    container_name: nexus-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${NEXUS_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - nexus_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  knowledge-db:
    image: postgres:15
    container_name: knowledge-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${KNOWLEDGE_DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - knowledge_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  financial-db:
    image: postgres:15
    container_name: financial-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${FINANCIAL_DB_NAME}
    ports:
      - "5434:5432"
    volumes:
      - financial_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  qdrant_data:
  nexus_db_data:
  knowledge_db_data:
  financial_db_data:
  embedding_cache:
