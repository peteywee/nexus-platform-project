services:
  nexus-orchestrator:
    # 'build' tells Docker Compose to build an image from the specified directory.
    build: ./nexus-orchestrator
    # 'image' names the built image for local reference and potential pushing to a registry.
    # Replace 'tssprotx/agent' with your Docker Hub username/repository.
    image: tssprotx/agent:nexus-orchestrator_latest
    container_name: nexus-orchestrator
    ports:
      - "3003:3000"
    environment:
      # These variables are populated from the .env file at the root of the project.
      - NEXUS_DB_USER=${NEXUS_DB_USER}
      - NEXUS_DB_PASSWORD=${NEXUS_DB_PASSWORD}
      - NEXUS_DB_HOST=${NEXUS_DB_HOST}
      - NEXUS_DB_NAME=${NEXUS_DB_NAME}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      # Ensures that the orchestrator will not start until its database is healthy.
      nexus-db: { condition: service_healthy }
    develop:
      # This section enables 'watch' mode for hot-reloading.
      watch:
        # If any file in the source directory changes, sync it to the container without restarting.
        - action: sync
          path: ./nexus-orchestrator
          target: /app
          ignore: [node_modules/] # Ignore the node_modules directory to prevent conflicts.
        # If package.json changes, trigger a full rebuild of the image.
        - action: rebuild
          path: ./nexus-orchestrator/package.json
    restart: unless-stopped

  knowledge-engine:
    build: ./knowledge-engine
    image: tssprotx/agent:knowledge-engine_latest
    container_name: knowledge-engine
    ports:
      - "4000:4000"
    environment:
      - KNOWLEDGE_DB_USER=${KNOWLEDGE_DB_USER}
      - KNOWLEDGE_DB_PASSWORD=${KNOWLEDGE_DB_PASSWORD}
      - KNOWLEDGE_DB_HOST=${KNOWLEDGE_DB_HOST}
      - KNOWLEDGE_DB_NAME=${KNOWLEDGE_DB_NAME}
      - QDRANT_HOST=${QDRANT_HOST}
    depends_on:
      knowledge-db: { condition: service_healthy }
      qdrant: { condition: service_started } # Changed from healthy to started after disabling healthcheck
    volumes:
      # Use a named volume for the embedding model cache to persist it across container restarts.
      - embedding_cache:/app/data
    develop:
      watch:
        - action: sync
          path: ./knowledge-engine
          target: /app
        - action: rebuild
          path: ./knowledge-engine/requirements.txt
    restart: unless-stopped

  financial-engine:
    build: ./financial-engine
    image: tssprotx/agent:financial-engine_latest
    container_name: financial-engine
    ports:
      - "5000:5000"
    environment:
      - FINANCIAL_DB_USER=${FINANCIAL_DB_USER}
      - FINANCIAL_DB_PASSWORD=${FINANCIAL_DB_PASSWORD}
      - FINANCIAL_DB_HOST=${FINANCIAL_DB_HOST}
      - FINANCIAL_DB_NAME=${FINANCIAL_DB_NAME}
    depends_on:
      financial-db: { condition: service_healthy }
    develop:
      watch:
        - action: sync
          path: ./financial-engine
          target: /app
        - action: rebuild
          path: ./financial-engine/requirements.txt
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:v1.7.4
    platform: linux/amd64 # Specifies architecture for compatibility
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      # Healthcheck is disabled to prevent startup failures on certain systems
      # where the check mechanism is unreliable for this specific image.
      disable: true
    restart: unless-stopped

  nexus-db:
    image: postgres:17 # Using latest major version of PostgreSQL
    container_name: nexus-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${NEXUS_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - nexus_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  knowledge-db:
    image: postgres:17 # Using latest major version of PostgreSQL
    container_name: knowledge-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${KNOWLEDGE_DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - knowledge_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  financial-db:
    image: postgres:17 # Using latest major version of PostgreSQL
    container_name: financial-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${FINANCIAL_DB_NAME}
    ports:
      - "5434:5432"
    volumes:
      - financial_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

# Named volumes are used to persist data across container restarts and removals.
volumes:
  qdrant_data:
  nexus_db_data:
  knowledge_db_data:
  financial_db_data:
  embedding_cache:
